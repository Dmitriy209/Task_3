1. ¬ывести 10 клиентов (id, им€, номер телефона, компани€), которых обслужлуживают сотрудники старше 50 лет, оплативших музыку в любом жанре кроме Rock, выходные данные должны быть отсортированы по городу клиента в алфавитном пор€дке и емейлу в обратном.
select DISTINCT Customer.CustomerId, Customer.FirstName, Customer.Phone, Customer.Company, Customer.City, Customer.Email from Customer
INNER join Employee on Customer.SupportRepId=(SELECT Employee.EmployeeId FROM Employee WHERE BirthDate>= DATE('now', '-50 years'))
INNER JOIN Invoice on Customer.CustomerId=Invoice.CustomerId
INNER JOIN InvoiceLine on Invoice.InvoiceId=InvoiceLine.InvoiceId
INNER JOIN Track on InvoiceLine.TrackId=Track.TrackId
INNER JOIN Genre on Track.GenreId=(SELECT Genre.GenreId FROM Genre WHERE Genre.Name NOT in ('Rock'))
ORDER by Customer.City ASC, Customer.Email DESC LIMIT 10
2.¬ывести список пользователей (полное им€, телефон) с указанием руководител€ (полное им€, телефон).
select e.FirstName, e.LastName, e.Phone, er.FirstName, er.LastName, er.Phone
from Employee as e
inner join Employee as er on er.EmployeeId = e.ReportsTo
3.¬ывести отсортированный список клиентов (им€, телефон) оплативших самые дорогие музыкальные треки.
select DISTINCT Customer.FirstName, Customer.Phone FROM Customer
INNER JOIN Invoice on Customer.CustomerId=Invoice.CustomerId
INNER JOIN InvoiceLine on Invoice.InvoiceId=(SELECT InvoiceLine.InvoiceId FROM Invoice where UnitPrice=(SELECT max(UnitPrice) FROM Track))
ORDER by FirstName
4.¬ывести покупателей (полное им€, номер телефона) которые что либо покупали, проживающих в одном городе, если их кол-во в городе больше.
SELECT DISTINCT Customer.FirstName || Customer.LastName as full_name, Customer.Phone, Customer.City FROM Customer
INNER JOIN Invoice on Invoice.CustomerId=Customer.CustomerId
WHERE City in (SELECT Customer.City FROM Customer GROUP BY City HAVING COUNT(City)>1)
5.¬ывести топ 3 самых платежеспособных города за все врем€.
SELECT BillingCity FROM Invoice GROUP BY BillingCity ORDER by sum(total) DESC limit 3
6.¬ывести самый попул€рный, на основании кол-ва продаж, жанр (название) и все треки в нем (название, альбом, исполнитель).
SELECT DISTINCT Genre.Name, Track.Name, Album.Title, Artist.Name FROM Track
INNER JOIN Genre on Track.GenreId=(SELECT Genre.GenreId WHERE Genre.Name=(SELECT Genre.Name FROM Track LEFT JOIN InvoiceLine on InvoiceLine.TrackId=Track.TrackId LEFT JOIN Genre on Genre.GenreId=Track.GenreId GROUP BY Genre.Name ORDER by count() DESC LIMIT 1))
INNER JOIN Album on Album.AlbumId=Track.AlbumId
INNER JOIN Artist on Artist.ArtistId=Album.ArtistId